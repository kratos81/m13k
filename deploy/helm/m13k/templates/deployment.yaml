apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "m13k.fullname" . }}
  labels:
    {{- include "m13k.labels" . | nindent 4 }}
spec:
{{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
{{- end }}
  selector:
    matchLabels:
      {{- include "m13k.selectorLabels" . | nindent 6 }}
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "m13k.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "m13k.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      volumes:
        - name: tls
          secret:
            secretName: {{ include "m13k.fullname" . }}-tls
        - name: mutate
          configMap:
            name: {{ include "m13k.fullname" . }}-mutate
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          volumeMounts:
            - name: tls
              mountPath: /app/tls
            - name: mutate
              mountPath: /app/mutate
          command: ["/app/m13k"]
          args:
            - "serve"
            - "--cert"
            - "/app/tls/server.crt"
            - "--key"
            - "/app/tls/server.key"
            - "--command"
            - "ytt"
            - "--"
            - "--allow-symlink-destination"
            - "true"
            - "--dangerous-allow-all-symlink-destinations"
            - "-o"
            - "json"
            - "-f"
            - "-"
            - "-f"
            - "/app/mutate"
          ports:
            - name: http
              containerPort: 8443
              protocol: TCP
          # livenessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          # readinessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
